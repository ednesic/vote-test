// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vote.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	vote.proto

It has these top-level messages:
	VoteRequest
	VoteResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type VoteRequest struct {
	User string `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *VoteRequest) Reset()                    { *m = VoteRequest{} }
func (m *VoteRequest) String() string            { return proto.CompactTextString(m) }
func (*VoteRequest) ProtoMessage()               {}
func (*VoteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *VoteRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type VoteResponse struct {
	Error string `protobuf:"bytes,1,opt,name=error" json:"error,omitempty"`
}

func (m *VoteResponse) Reset()                    { *m = VoteResponse{} }
func (m *VoteResponse) String() string            { return proto.CompactTextString(m) }
func (*VoteResponse) ProtoMessage()               {}
func (*VoteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *VoteResponse) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func init() {
	proto.RegisterType((*VoteRequest)(nil), "VoteRequest")
	proto.RegisterType((*VoteResponse)(nil), "VoteResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Vote service

type VoteClient interface {
	CreateVote(ctx context.Context, in *VoteRequest, opts ...grpc.CallOption) (*VoteResponse, error)
}

type voteClient struct {
	cc *grpc.ClientConn
}

func NewVoteClient(cc *grpc.ClientConn) VoteClient {
	return &voteClient{cc}
}

func (c *voteClient) CreateVote(ctx context.Context, in *VoteRequest, opts ...grpc.CallOption) (*VoteResponse, error) {
	out := new(VoteResponse)
	err := grpc.Invoke(ctx, "/Vote/CreateVote", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Vote service

type VoteServer interface {
	CreateVote(context.Context, *VoteRequest) (*VoteResponse, error)
}

func RegisterVoteServer(s *grpc.Server, srv VoteServer) {
	s.RegisterService(&_Vote_serviceDesc, srv)
}

func _Vote_CreateVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VoteServer).CreateVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Vote/CreateVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VoteServer).CreateVote(ctx, req.(*VoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Vote_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Vote",
	HandlerType: (*VoteServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateVote",
			Handler:    _Vote_CreateVote_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vote.proto",
}

func init() { proto.RegisterFile("vote.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 132 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xcb, 0x2f, 0x49,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x52, 0xe4, 0xe2, 0x0e, 0xcb, 0x2f, 0x49, 0x0d, 0x4a,
	0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe2, 0x62, 0x29, 0x2d, 0x4e, 0x2d, 0x92, 0x60, 0x54,
	0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x95, 0x54, 0xb8, 0x78, 0x20, 0x4a, 0x8a, 0x0b, 0xf2, 0xf3,
	0x8a, 0x53, 0x85, 0x44, 0xb8, 0x58, 0x53, 0x8b, 0x8a, 0xf2, 0x61, 0x8a, 0x20, 0x1c, 0x23, 0x63,
	0x2e, 0x16, 0x90, 0x2a, 0x21, 0x6d, 0x2e, 0x2e, 0xe7, 0xa2, 0xd4, 0xc4, 0x92, 0x54, 0x30, 0x8f,
	0x47, 0x0f, 0xc9, 0x74, 0x29, 0x5e, 0x3d, 0x64, 0x83, 0x94, 0x18, 0x9c, 0x58, 0xa2, 0x98, 0x0a,
	0x92, 0x92, 0xd8, 0xc0, 0x4e, 0x31, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x0b, 0x91, 0xcf, 0xac,
	0x98, 0x00, 0x00, 0x00,
}
