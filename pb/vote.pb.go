// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vote.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Vote struct {
	ElectionId           int32    `protobuf:"varint,1,opt,name=ElectionId,proto3" json:"ElectionId,omitempty"`
	User                 string   `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vote) Reset()         { *m = Vote{} }
func (m *Vote) String() string { return proto.CompactTextString(m) }
func (*Vote) ProtoMessage()    {}
func (*Vote) Descriptor() ([]byte, []int) {
	return fileDescriptor_vote_028ed6eb0320fe98, []int{0}
}
func (m *Vote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vote.Unmarshal(m, b)
}
func (m *Vote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vote.Marshal(b, m, deterministic)
}
func (dst *Vote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vote.Merge(dst, src)
}
func (m *Vote) XXX_Size() int {
	return xxx_messageInfo_Vote.Size(m)
}
func (m *Vote) XXX_DiscardUnknown() {
	xxx_messageInfo_Vote.DiscardUnknown(m)
}

var xxx_messageInfo_Vote proto.InternalMessageInfo

func (m *Vote) GetElectionId() int32 {
	if m != nil {
		return m.ElectionId
	}
	return 0
}

func (m *Vote) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type Election struct {
	Id                   int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Inicio               *timestamp.Timestamp `protobuf:"bytes,2,opt,name=inicio,proto3" json:"inicio,omitempty"`
	Termino              *timestamp.Timestamp `protobuf:"bytes,3,opt,name=termino,proto3" json:"termino,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Election) Reset()         { *m = Election{} }
func (m *Election) String() string { return proto.CompactTextString(m) }
func (*Election) ProtoMessage()    {}
func (*Election) Descriptor() ([]byte, []int) {
	return fileDescriptor_vote_028ed6eb0320fe98, []int{1}
}
func (m *Election) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Election.Unmarshal(m, b)
}
func (m *Election) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Election.Marshal(b, m, deterministic)
}
func (dst *Election) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Election.Merge(dst, src)
}
func (m *Election) XXX_Size() int {
	return xxx_messageInfo_Election.Size(m)
}
func (m *Election) XXX_DiscardUnknown() {
	xxx_messageInfo_Election.DiscardUnknown(m)
}

var xxx_messageInfo_Election proto.InternalMessageInfo

func (m *Election) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Election) GetInicio() *timestamp.Timestamp {
	if m != nil {
		return m.Inicio
	}
	return nil
}

func (m *Election) GetTermino() *timestamp.Timestamp {
	if m != nil {
		return m.Termino
	}
	return nil
}

func init() {
	proto.RegisterType((*Vote)(nil), "Vote")
	proto.RegisterType((*Election)(nil), "Election")
}

func init() { proto.RegisterFile("vote.proto", fileDescriptor_vote_028ed6eb0320fe98) }

var fileDescriptor_vote_028ed6eb0320fe98 = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xcb, 0x2f, 0x49,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x97, 0x92, 0x4f, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07,
	0xf3, 0x92, 0x4a, 0xd3, 0xf4, 0x4b, 0x32, 0x73, 0x53, 0x8b, 0x4b, 0x12, 0x73, 0x0b, 0x20, 0x0a,
	0x94, 0xac, 0xb8, 0x58, 0xc2, 0xf2, 0x4b, 0x52, 0x85, 0xe4, 0xb8, 0xb8, 0x5c, 0x73, 0x52, 0x93,
	0x4b, 0x32, 0xf3, 0xf3, 0x3c, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x58, 0x83, 0x90, 0x44, 0x84,
	0x84, 0xb8, 0x58, 0x4a, 0x8b, 0x53, 0x8b, 0x24, 0x98, 0x14, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c,
	0xa5, 0x16, 0x46, 0x2e, 0x0e, 0x98, 0x12, 0x21, 0x3e, 0x2e, 0xa6, 0x4c, 0x98, 0x46, 0xa6, 0xcc,
	0x14, 0x21, 0x23, 0x2e, 0xb6, 0xcc, 0xbc, 0xcc, 0xe4, 0xcc, 0x7c, 0xb0, 0x16, 0x6e, 0x23, 0x29,
	0x3d, 0x88, 0x53, 0xf4, 0x60, 0x4e, 0xd1, 0x0b, 0x81, 0x39, 0x25, 0x08, 0xaa, 0x52, 0xc8, 0x84,
	0x8b, 0xbd, 0x24, 0xb5, 0x28, 0x37, 0x33, 0x2f, 0x5f, 0x82, 0x99, 0xa0, 0x26, 0x98, 0x52, 0x27,
	0x96, 0x28, 0xa6, 0x82, 0xa4, 0x24, 0x36, 0xb0, 0x12, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x0c, 0x8f, 0xb1, 0xbe, 0xfe, 0x00, 0x00, 0x00,
}
